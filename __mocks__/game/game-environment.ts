import { QueryClient } from '@tanstack/react-query';
import { mapFiltersCacheKey } from 'app/[game]/[map]/hooks/use-map-filters';
import { achievementsCacheKey } from 'app/[game]/hooks/use-achievements';
import { currentServerCacheKey } from 'app/[game]/hooks/use-current-server';
import { effectsCacheKey } from 'app/[game]/hooks/use-effects';
import { eventsCacheKey } from 'app/[game]/hooks/use-events';
import { heroCacheKey } from 'app/[game]/hooks/use-hero';
import { mapCacheKey } from 'app/[game]/hooks/use-map';
import { playersCacheKey } from 'app/[game]/hooks/use-players';
import { questsCacheKey } from 'app/[game]/hooks/use-quests';
import { reportsCacheKey } from 'app/[game]/hooks/use-reports';
import { reputationsCacheKey } from 'app/[game]/hooks/use-reputations';
import { villagesCacheKey } from 'app/[game]/hooks/use-villages';
import type { GameEvent } from 'interfaces/models/events/game-event';
import type { Achievement } from 'interfaces/models/game/achievement';
import type { Effect } from 'interfaces/models/game/effect';
import type { Hero } from 'interfaces/models/game/hero';
import type { MapFilters } from 'interfaces/models/game/map-filters';
import type { Player } from 'interfaces/models/game/player';
import type { Quest } from 'interfaces/models/game/quest';
import type { Report } from 'interfaces/models/game/report';
import type { Reputation } from 'interfaces/models/game/reputation';
import type { Server } from 'interfaces/models/game/server';
import type { Tile } from 'interfaces/models/game/tile';
import type { Village } from 'interfaces/models/game/village';
import { heroMock } from 'mocks/game/hero-mock';
import { mapFiltersMock } from 'mocks/game/map-filters-mock';
import { playersMock } from 'mocks/game/players-mock';
import { reputationsMock } from 'mocks/game/reputations-mock';
import { villagesMock } from 'mocks/game/villages-mock';
import { serverMock } from 'mocks/models/game/server-mock';

export const createGameEnvironment = () => {
  const queryClient = new QueryClient();
  queryClient.setQueryData<Server>([currentServerCacheKey], serverMock);
  queryClient.setQueryData<Achievement[]>([achievementsCacheKey], []);
  queryClient.setQueryData<Report[]>([reportsCacheKey], []);
  queryClient.setQueryData<Effect[]>([effectsCacheKey], []);
  queryClient.setQueryData<Quest[]>([questsCacheKey], []);
  queryClient.setQueryData<Hero>([heroCacheKey], heroMock);
  queryClient.setQueryData<Tile[]>([mapCacheKey], []);
  queryClient.setQueryData<GameEvent[]>([eventsCacheKey], []);
  queryClient.setQueryData<Village[]>([villagesCacheKey], villagesMock);
  queryClient.setQueryData<Player[]>([playersCacheKey], playersMock);
  queryClient.setQueryData<Reputation[]>([reputationsCacheKey], reputationsMock);
  queryClient.setQueryData<MapFilters>([mapFiltersCacheKey], mapFiltersMock);

  return queryClient;
};
